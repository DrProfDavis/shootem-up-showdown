{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { Hex } from \"../models/Hex\";\nimport { HexUtils } from \"../HexUtils\";\nimport { useLayoutContext } from \"../Layout\";\n/**\n * Renders a Hexagon cell at the given rqs-based coordinates.\n */\nexport function Hexagon(props) {\n  // destructure props into their values\n  const {\n      q,\n      r,\n      s,\n      fill,\n      cellStyle,\n      className,\n      children,\n      onDragStart,\n      onDragEnd,\n      onDrop,\n      onDragOver,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOver,\n      onClick,\n      data,\n      fillOpacity\n    } = props,\n    rest = __rest(props, [\"q\", \"r\", \"s\", \"fill\", \"cellStyle\", \"className\", \"children\", \"onDragStart\", \"onDragEnd\", \"onDrop\", \"onDragOver\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOver\", \"onClick\", \"data\", \"fillOpacity\"]);\n  const {\n    layout,\n    points\n  } = useLayoutContext();\n  const {\n    hex,\n    pixel\n  } = React.useMemo(() => {\n    const hex = new Hex(q, r, s);\n    const pixel = HexUtils.hexToPixel(hex, layout);\n    return {\n      hex,\n      pixel\n    };\n  }, [q, r, s, layout]);\n  // for backwards comapatbility\n  const state = {\n    hex\n  };\n  const fillId = fill ? `url(#${fill})` : undefined;\n  const draggable = {\n    draggable: true\n  };\n  return _jsx(\"g\", Object.assign({\n    className: classNames(\"hexagon-group\", className),\n    transform: `translate(${pixel.x}, ${pixel.y})`\n  }, rest, draggable, {\n    onDragStart: e => {\n      if (onDragStart) {\n        const targetProps = {\n          hex: hex,\n          pixel,\n          data: data,\n          fill: fill,\n          className: className\n        };\n        e.dataTransfer.setData(\"hexagon\", JSON.stringify(targetProps));\n        onDragStart(e, {\n          data,\n          state,\n          props\n        });\n      }\n    },\n    onDragEnd: e => {\n      if (onDragEnd) {\n        e.preventDefault();\n        const success = e.dataTransfer.dropEffect !== \"none\";\n        onDragEnd(e, {\n          state,\n          props\n        }, success);\n      }\n    },\n    onDrop: e => {\n      if (onDrop) {\n        e.preventDefault();\n        const target = JSON.parse(e.dataTransfer.getData(\"hexagon\"));\n        onDrop(e, {\n          data,\n          state,\n          props\n        }, target);\n      }\n    },\n    onDragOver: e => {\n      if (onDragOver) {\n        onDragOver(e, {\n          data,\n          state,\n          props\n        });\n      }\n    },\n    onMouseEnter: e => {\n      if (onMouseEnter) {\n        onMouseEnter(e, {\n          data,\n          state,\n          props\n        });\n      }\n    },\n    onClick: e => {\n      if (onClick) {\n        onClick(e, {\n          data,\n          state,\n          props\n        });\n      }\n    },\n    onMouseOver: e => {\n      if (onMouseOver) {\n        onMouseOver(e, {\n          data,\n          state,\n          props\n        });\n      }\n    },\n    onMouseLeave: e => {\n      if (onMouseLeave) {\n        onMouseLeave(e, {\n          data,\n          state,\n          props\n        });\n      }\n    }\n  }, {\n    children: _jsxs(\"g\", Object.assign({\n      className: \"hexagon\"\n    }, {\n      children: [_jsx(\"polygon\", {\n        points: points,\n        fill: fillId,\n        style: cellStyle\n      }), children]\n    }))\n  }));\n}\nexport default Hexagon;","map":{"version":3,"names":["React","classNames","Hex","HexUtils","useLayoutContext","Hexagon","props","q","r","s","fill","cellStyle","className","children","onDragStart","onDragEnd","onDrop","onDragOver","onMouseEnter","onMouseLeave","onMouseOver","onClick","data","fillOpacity","rest","__rest","layout","points","hex","pixel","useMemo","hexToPixel","state","fillId","undefined","draggable","_jsx","Object","assign","transform","x","y","e","targetProps","dataTransfer","setData","JSON","stringify","preventDefault","success","dropEffect","target","parse","getData","_jsxs","style"],"sources":["../../src/Hexagon/Hexagon.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}