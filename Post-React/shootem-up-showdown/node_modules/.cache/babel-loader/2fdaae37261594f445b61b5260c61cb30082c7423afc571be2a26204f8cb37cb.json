{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joey\\\\class\\\\bootcamp\\\\assignment\\\\shootem-up-showdown\\\\Post-React\\\\shootem-up-showdown\\\\src\\\\components\\\\Cell.js\";\nimport React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid';\nimport Player from './Player'; // Import the Player component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handleClick = (q, r, i) => {\n  const findIndexByCoordinates = (q, r) => {\n    return gridArray.findIndex(coord => coord[0] === q && coord[1] === r);\n  };\n  const adjacentTiles = [{\n    q: q,\n    r: r - 1\n  },\n  // Top\n  {\n    q: q + 1,\n    r: r - 1\n  },\n  // Top-Right\n  {\n    q: q + 1,\n    r: r\n  },\n  // Bottom-Right\n  {\n    q: q,\n    r: r + 1\n  },\n  // Bottom\n  {\n    q: q - 1,\n    r: r + 1\n  },\n  // Bottom-Left\n  {\n    q: q - 1,\n    r: r\n  } // Top-Left\n  ];\n\n  console.log(\"Clicked Tile (q, r, i):\", q, r, i);\n  // Your click event logic goes here\n  // alert(i);\n  console.log(adjacentTiles[0].q);\n  console.log(i);\n};\nconst places = [{\n  i: 0\n}, {\n  i: 1\n}, {\n  i: 2\n}, {\n  i: 17\n}, {\n  i: 18\n}, {\n  i: 19\n}, {\n  i: 35\n}];\nconst getRandomPlace = () => {\n  const randomIndex = Math.floor(Math.random() * places.length);\n  return places[randomIndex];\n};\nconst randomPlace = getRandomPlace();\nconst Cell = ({\n  q,\n  r,\n  i\n}) => {\n  // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n  const isPlayerCell = places.some(place => place.i === i);\n  return /*#__PURE__*/_jsxDEV(Hexagon, {\n    onClick: () => handleClick(q, r, i),\n    q: q,\n    r: r,\n    children: randomPlace.i === i ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 36\n    }, this) : null\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","Hexagon","Text","Player","jsxDEV","_jsxDEV","handleClick","q","r","i","findIndexByCoordinates","gridArray","findIndex","coord","adjacentTiles","console","log","places","getRandomPlace","randomIndex","Math","floor","random","length","randomPlace","Cell","isPlayerCell","some","place","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Joey/class/bootcamp/assignment/shootem-up-showdown/Post-React/shootem-up-showdown/src/components/Cell.js"],"sourcesContent":["import React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid'\nimport Player from './Player' // Import the Player component\n\n\nlet handleClick = (q, r, i) => {\n\n    const findIndexByCoordinates = (q, r) => {\n        return gridArray.findIndex(coord => coord[0] === q && coord[1] === r);\n    };\n\n    const adjacentTiles = [\n        { q: q, r: r - 1 }, // Top\n        { q: q + 1, r: r - 1 }, // Top-Right\n        { q: q + 1, r: r }, // Bottom-Right\n        { q: q, r: r + 1 }, // Bottom\n        { q: q - 1, r: r + 1 }, // Bottom-Left\n        { q: q - 1, r: r }, // Top-Left\n    ];\n\n    console.log(\"Clicked Tile (q, r, i):\", q, r, i);\n    // Your click event logic goes here\n    // alert(i);\n    console.log(adjacentTiles[0].q);\n    console.log(i);\n}\n\n\nconst places = [\n    {i: 0},\n    {i: 1},\n    {i: 2},\n    {i: 17},\n    {i: 18},\n    {i: 19},\n    {i: 35},\n];\n\nconst getRandomPlace = () => {\n    const randomIndex = Math.floor(Math.random() * places.length);\n    return places[randomIndex];\n};\n\n\nconst randomPlace = getRandomPlace();\n\n\nconst Cell = ({ q, r, i}) => {\n\n    \n    // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n    const isPlayerCell = places.some(place => place.i === i);\n\n    return (\n        <Hexagon onClick={()=>handleClick(q, r, i)} key={i} q={q} r={r}>\n            \n            \n            {/* {<Text>\n                {i} {q} {r}\n            </Text>} */}\n            {/* {isPlayerCell ? <Player /> : null} */}\n            {randomPlace.i === i ? <Player /> : null}\n        </Hexagon>\n    )\n}\nexport default Cell"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}