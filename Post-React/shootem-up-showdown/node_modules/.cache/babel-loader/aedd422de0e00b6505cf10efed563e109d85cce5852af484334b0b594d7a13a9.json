{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joey\\\\class\\\\bootcamp\\\\assignment\\\\shootem-up-showdown\\\\Post-React\\\\shootem-up-showdown\\\\src\\\\components\\\\Cell.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid';\nimport Player from './Player'; // Import the Player component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handleClick = i => {\n  // Your click event logic goes here\n  alert(i);\n  console.log(i);\n};\n\n// const places = [\n//     {q:0, r: -8},\n//     {q:1, r: -7},\n//     {q:2, r: -6},\n//     {q:18, r: -7},\n//     {q:17, r: -8},\n//     {q:35, r: -7},\n//     {q:19, r: -6}\n// ]\n\nconst places = [{\n  i: 0\n}, {\n  i: 1\n}, {\n  i: 2\n}, {\n  i: 17\n}, {\n  i: 18\n}, {\n  i: 19\n}, {\n  i: 35\n}];\nconst getRandomPlace = () => {\n  const randomIndex = Math.floor(Math.random() * places.length);\n  return places[randomIndex];\n};\nconst Cell = ({\n  q,\n  r,\n  i\n}) => {\n  _s();\n  const [randomPlace, setRandomPlace] = useState(null);\n  useEffect(() => {\n    setRandomPlace(getRandomPlace());\n  }, []); // This effect runs once when the component mounts\n\n  // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n  const isPlayerCell = places.some(place => place.i === i);\n  return /*#__PURE__*/_jsxDEV(Hexagon, {\n    onClick: () => handleClick(i),\n    q: q,\n    r: r,\n    children: randomPlace && randomPlace.i === i ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 51\n    }, this) : null\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Cell, \"3EAzFlaaXuXGwLDzxm8zar8KrC8=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","Hexagon","Text","Player","jsxDEV","_jsxDEV","handleClick","i","alert","console","log","places","getRandomPlace","randomIndex","Math","floor","random","length","Cell","q","r","_s","randomPlace","setRandomPlace","useState","useEffect","isPlayerCell","some","place","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Joey/class/bootcamp/assignment/shootem-up-showdown/Post-React/shootem-up-showdown/src/components/Cell.js"],"sourcesContent":["import React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid'\nimport Player from './Player' // Import the Player component\n\n\nlet handleClick = (i) => {\n    // Your click event logic goes here\n    alert(i);\n    console.log(i)\n}\n\n// const places = [\n//     {q:0, r: -8},\n//     {q:1, r: -7},\n//     {q:2, r: -6},\n//     {q:18, r: -7},\n//     {q:17, r: -8},\n//     {q:35, r: -7},\n//     {q:19, r: -6}\n// ]\n\nconst places = [\n    {i: 0},\n    {i: 1},\n    {i: 2},\n    {i: 17},\n    {i: 18},\n    {i: 19},\n    {i: 35},\n];\n\nconst getRandomPlace = () => {\n    const randomIndex = Math.floor(Math.random() * places.length);\n    return places[randomIndex];\n};\n\nconst Cell = ({ q, r, i}) => {\n\n    const [randomPlace, setRandomPlace] = useState(null);\n\n    useEffect(() => {\n        setRandomPlace(getRandomPlace());\n    }, []); // This effect runs once when the component mounts\n\n    // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n    const isPlayerCell = places.some(place => place.i === i);\n\n    return (\n        <Hexagon onClick={()=>handleClick(i)} key={i} q={q} r={r}>\n            \n            {/* {<Text>\n                {i} {q} {r}\n            </Text>} */}\n            {/* {isPlayerCell ? <Player /> : null} */}\n            {randomPlace && randomPlace.i === i ? <Player /> : null}\n        </Hexagon>\n    )\n}\nexport default Cell"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,IAAI,QAAQ,eAAe;AAC7C,OAAOC,MAAM,MAAM,UAAU,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9B,IAAIC,WAAW,GAAIC,CAAC,IAAK;EACrB;EACAC,KAAK,CAACD,CAAC,CAAC;EACRE,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,MAAM,GAAG,CACX;EAACJ,CAAC,EAAE;AAAC,CAAC,EACN;EAACA,CAAC,EAAE;AAAC,CAAC,EACN;EAACA,CAAC,EAAE;AAAC,CAAC,EACN;EAACA,CAAC,EAAE;AAAE,CAAC,EACP;EAACA,CAAC,EAAE;AAAE,CAAC,EACP;EAACA,CAAC,EAAE;AAAE,CAAC,EACP;EAACA,CAAC,EAAE;AAAE,CAAC,CACV;AAED,MAAMK,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,MAAM,CAACM,MAAM,CAAC;EAC7D,OAAON,MAAM,CAACE,WAAW,CAAC;AAC9B,CAAC;AAED,MAAMK,IAAI,GAAGA,CAAC;EAAEC,CAAC;EAAEC,CAAC;EAAEb;AAAC,CAAC,KAAK;EAAAc,EAAA;EAEzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZF,cAAc,CAACX,cAAc,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;;EAEA,MAAMc,YAAY,GAAGf,MAAM,CAACgB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACrB,CAAC,KAAKA,CAAC,CAAC;EAExD,oBACIF,OAAA,CAACJ,OAAO;IAAC4B,OAAO,EAAEA,CAAA,KAAIvB,WAAW,CAACC,CAAC,CAAE;IAASY,CAAC,EAAEA,CAAE;IAACC,CAAC,EAAEA,CAAE;IAAAU,QAAA,EAMpDR,WAAW,IAAIA,WAAW,CAACf,CAAC,KAAKA,CAAC,gBAAGF,OAAA,CAACF,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG;EAAI,GANhB3B,CAAC;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOnC,CAAC;AAElB,CAAC;AAAAb,EAAA,CAtBKH,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAuBV,eAAeA,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}