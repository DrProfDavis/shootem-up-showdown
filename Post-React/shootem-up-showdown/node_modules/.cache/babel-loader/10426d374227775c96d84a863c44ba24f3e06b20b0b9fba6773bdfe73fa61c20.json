{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joey\\\\class\\\\bootcamp\\\\assignment\\\\shootem-up-showdown\\\\Post-React\\\\shootem-up-showdown\\\\src\\\\components\\\\Cell.js\";\nimport React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid';\nimport Player from './Player'; // Import the Player component\nimport { gridArray } from './Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handleClick = (q, r) => {\n  const findIndexByCoordinates = (q, r) => {\n    return gridArray.findIndex(coord => coord[0] === q && coord[1] === r);\n  };\n  const clickedTileIndex = findIndexByCoordinates(q, r);\n  if (clickedTileIndex !== -1) {\n    const adjacentTiles = [findIndexByCoordinates(q, r - 1),\n    // Top\n    findIndexByCoordinates(q + 1, r - 1),\n    // Top-Right\n    findIndexByCoordinates(q + 1, r),\n    // Bottom-Right\n    findIndexByCoordinates(q, r + 1),\n    // Bottom\n    findIndexByCoordinates(q - 1, r + 1),\n    // Bottom-Left\n    findIndexByCoordinates(q - 1, r) // Top-Left\n    ];\n\n    console.log(\"Clicked Tile Index:\", i);\n    console.log(\"Adjacent Tile Indexes:\", adjacentTiles);\n  }\n\n  // Your click event logic goes here\n  // alert(i);\n  // console.log(i);\n};\n\nconst places = [{\n  i: 0\n}, {\n  i: 1\n}, {\n  i: 2\n}, {\n  i: 17\n}, {\n  i: 18\n}, {\n  i: 19\n}, {\n  i: 35\n}];\nconst getRandomPlace = () => {\n  const randomIndex = Math.floor(Math.random() * places.length);\n  return places[randomIndex];\n};\nconst randomPlace = getRandomPlace();\nconst Cell = ({\n  q,\n  r,\n  i\n}) => {\n  // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n  const isPlayerCell = places.some(place => place.i === i);\n  return /*#__PURE__*/_jsxDEV(Hexagon, {\n    onClick: () => handleClick(q, r, i),\n    q: q,\n    r: r,\n    children: randomPlace.i === i ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 36\n    }, this) : null\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","Hexagon","Text","Player","gridArray","jsxDEV","_jsxDEV","handleClick","q","r","findIndexByCoordinates","findIndex","coord","clickedTileIndex","adjacentTiles","console","log","i","places","getRandomPlace","randomIndex","Math","floor","random","length","randomPlace","Cell","isPlayerCell","some","place","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Joey/class/bootcamp/assignment/shootem-up-showdown/Post-React/shootem-up-showdown/src/components/Cell.js"],"sourcesContent":["import React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid'\nimport Player from './Player' // Import the Player component\nimport { gridArray } from './Grid';\n\n\nlet handleClick = (q, r) => {\n\n    const findIndexByCoordinates = (q, r) => {\n        return gridArray.findIndex(coord => coord[0] === q && coord[1] === r);\n    };\n\n    const clickedTileIndex = findIndexByCoordinates(q, r);\n\n    if (clickedTileIndex !== -1) {\n        const adjacentTiles = [\n            findIndexByCoordinates(q, r - 1), // Top\n            findIndexByCoordinates(q + 1, r - 1), // Top-Right\n            findIndexByCoordinates(q + 1, r), // Bottom-Right\n            findIndexByCoordinates(q, r + 1), // Bottom\n            findIndexByCoordinates(q - 1, r + 1), // Bottom-Left\n            findIndexByCoordinates(q - 1, r), // Top-Left\n        ];\n\n        console.log(\"Clicked Tile Index:\", i);\n        console.log(\"Adjacent Tile Indexes:\", adjacentTiles);\n    }\n\n    // Your click event logic goes here\n    // alert(i);\n    // console.log(i);\n}\n\n\nconst places = [\n    {i: 0},\n    {i: 1},\n    {i: 2},\n    {i: 17},\n    {i: 18},\n    {i: 19},\n    {i: 35},\n];\n\nconst getRandomPlace = () => {\n    const randomIndex = Math.floor(Math.random() * places.length);\n    return places[randomIndex];\n};\n\n\nconst randomPlace = getRandomPlace();\n\n\nconst Cell = ({ q, r, i}) => {\n\n    \n    // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n    const isPlayerCell = places.some(place => place.i === i);\n\n    return (\n        <Hexagon onClick={()=>handleClick(q, r, i)} key={i} q={q} r={r}>\n            \n            \n            {/* {<Text>\n                {i} {q} {r}\n            </Text>} */}\n            {/* {isPlayerCell ? <Player /> : null} */}\n            {randomPlace.i === i ? <Player /> : null}\n        </Hexagon>\n    )\n}\nexport default Cell"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}