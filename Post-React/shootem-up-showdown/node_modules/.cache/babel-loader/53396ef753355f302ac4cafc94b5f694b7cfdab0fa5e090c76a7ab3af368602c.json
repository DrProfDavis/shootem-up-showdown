{"ast":null,"code":"import { Hex } from \"./models/Hex\";\nimport { HexUtils } from \"./HexUtils\";\n/** This class contains static methods for generating Hex coordinates\n * for specifically-shaped grids, such as rectangle, hexagon, and more. */\nexport class GridGenerator {\n  /** This method is used to dynamically choose a type of grid to\n   * generate.\n   */\n  static getGenerator(name) {\n    const x = GridGenerator[name];\n    return x;\n  }\n  /** May not be working. There are no tests for it. */\n  static ring(center, mapRadius) {\n    let hexas = [];\n    let hex = HexUtils.add(center, HexUtils.multiply(HexUtils.direction(4), mapRadius));\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < mapRadius; j++) {\n        hexas.push(hex);\n        hex = HexUtils.neighbor(hex, i);\n      }\n    }\n    return hexas;\n  }\n  /** May not be working. There are no tests for it. */\n  static spiral(center, mapRadius) {\n    let results = [center];\n    for (let k = 1; k <= mapRadius; k++) {\n      const temp = GridGenerator.ring(center, k);\n      results = results.concat(temp);\n    }\n    return results;\n  }\n  /** Returns an array of Hex coordinates needed to create a\n   * parallelogram grid */\n  static parallelogram(q1, q2, r1, r2) {\n    let hexas = [];\n    for (let q = q1; q <= q2; q++) {\n      for (let r = r1; r <= r2; r++) {\n        hexas.push(new Hex(q, r, -q - r));\n      }\n    }\n    return hexas;\n  }\n  /** Returns an array of Hex coordinates needed to create a\n   * triangle grid\n   */\n  static triangle(mapSize) {\n    let hexas = [];\n    for (let q = 0; q <= mapSize; q++) {\n      for (let r = 0; r <= mapSize - q; r++) {\n        hexas.push(new Hex(q, r, -q - r));\n      }\n    }\n    return hexas;\n  }\n  /** Returns an array of Hex coordinates needed to create a\n   * Hexagon grid */\n  static hexagon(mapRadius) {\n    let hexas = [];\n    for (let q = -mapRadius; q <= mapRadius; q++) {\n      let r1 = Math.max(-mapRadius, -q - mapRadius);\n      let r2 = Math.min(mapRadius, -q + mapRadius);\n      for (let r = r1; r <= r2; r++) {\n        hexas.push(new Hex(q, r, -q - r));\n      }\n    }\n    return hexas;\n  }\n  /** Returns an array of Hex coordinates needed to create\n   * a diagonal rectangle grid */\n  static rectangle(mapWidth, mapHeight) {\n    let hexas = [];\n    for (let r = 0; r < mapHeight; r++) {\n      let offset = Math.floor(r / 2); // or r>>1\n      for (let q = -offset; q < mapWidth - offset; q++) {\n        hexas.push(new Hex(q, r, -q - r));\n      }\n    }\n    return hexas;\n  }\n  /** Returns an array of Hex coordinates needed to create a vertical\n   * and horizontal rectangle.\n   */\n  static orientedRectangle(mapWidth, mapHeight) {\n    let hexas = [];\n    for (let q = 0; q < mapWidth; q++) {\n      let offset = Math.floor(q / 2); // or q>>1\n      for (let r = -offset; r < mapHeight - offset; r++) {\n        hexas.push(new Hex(q, r, -q - r));\n      }\n    }\n    return hexas;\n  }\n}\nexport default GridGenerator;","map":{"version":3,"names":["Hex","HexUtils","GridGenerator","getGenerator","name","x","ring","center","mapRadius","hexas","hex","add","multiply","direction","i","j","push","neighbor","spiral","results","k","temp","concat","parallelogram","q1","q2","r1","r2","q","r","triangle","mapSize","hexagon","Math","max","min","rectangle","mapWidth","mapHeight","offset","floor","orientedRectangle"],"sources":["../src/GridGenerator.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}