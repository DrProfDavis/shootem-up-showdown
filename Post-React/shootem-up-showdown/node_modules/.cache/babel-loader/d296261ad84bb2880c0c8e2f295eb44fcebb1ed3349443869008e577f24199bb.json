{"ast":null,"code":"import React from 'react';\nimport GridArray from './GridArray';\nconst HandleClick = (q, r, i) => {\n  const findIndexByCoordinates = (q, r) => {\n    return gridArray.findIndex(coord => coord[0] === q && coord[1] === r);\n  };\n  if (i !== -1) {\n    const adjacentTiles = [];\n\n    //Top\n    if (findIndexByCoordinates(q, r - 1) >= 0) {\n      adjacentTiles.push(findIndexByCoordinates(q, r - 1));\n    }\n    //Top Right\n    if (findIndexByCoordinates(q + 1, r - 1) >= 0) {\n      adjacentTiles.push(findIndexByCoordinates(q + 1, r - 1));\n    }\n    //Bottom Right\n    if (findIndexByCoordinates(q + 1, r) >= 0) {\n      adjacentTiles.push(findIndexByCoordinates(q + 1, r));\n    }\n    //Bottom\n    if (findIndexByCoordinates(q, r + 1) >= 0) {\n      adjacentTiles.push(findIndexByCoordinates(q, r + 1));\n    }\n    //Bottom Left\n    if (findIndexByCoordinates(q - 1, r + 1) >= 0) {\n      adjacentTiles.push(findIndexByCoordinates(q - 1, r + 1));\n    }\n    //Top Left\n    if (findIndexByCoordinates(q - 1, r) >= 0) {\n      adjacentTiles.push(findIndexByCoordinates(q - 1, r));\n    }\n\n    //These should never be negative so they'll always be pushed. JUST KIDDING. Need the if statement because if you click the bottom tiles, they get out of map and therefore the i becomes negative apparently.\n    // adjacentTiles.push(findIndexByCoordinates(q + 1, r));\n    // adjacentTiles.push(findIndexByCoordinates(q, r + 1));\n\n    console.log(\"Clicked Tile Index:\", i);\n    console.log(\"Adjacent Tile Indexes:\", adjacentTiles);\n  }\n\n  // Your click event logic goes here\n  // alert(i);\n  // console.log(i);\n};\n_c = HandleClick;\nexport { HandleClick };\nvar _c;\n$RefreshReg$(_c, \"HandleClick\");","map":{"version":3,"names":["React","GridArray","HandleClick","q","r","i","findIndexByCoordinates","gridArray","findIndex","coord","adjacentTiles","push","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Joey/class/bootcamp/assignment/shootem-up-showdown/Post-React/shootem-up-showdown/src/components/HandleClick.js"],"sourcesContent":["import React from 'react';\r\nimport GridArray from './GridArray'\r\n\r\n\r\nconst HandleClick = (q, r, i) => {\r\n\r\n    const findIndexByCoordinates = (q, r) => {\r\n        return gridArray.findIndex(coord => coord[0] === q && coord[1] === r);\r\n    };\r\n\r\n\r\n    if (i !== -1) {\r\n        const adjacentTiles = [];\r\n\r\n        //Top\r\n        if(findIndexByCoordinates(q, r - 1) >= 0){\r\n            adjacentTiles.push(findIndexByCoordinates(q, r - 1));\r\n        }\r\n        //Top Right\r\n        if(findIndexByCoordinates(q + 1, r - 1) >= 0){\r\n            adjacentTiles.push(findIndexByCoordinates(q + 1, r - 1));\r\n        }\r\n        //Bottom Right\r\n        if(findIndexByCoordinates(q + 1, r) >= 0){\r\n            adjacentTiles.push(findIndexByCoordinates(q + 1, r));\r\n        }\r\n         //Bottom\r\n         if(findIndexByCoordinates(q, r + 1) >= 0){\r\n            adjacentTiles.push(findIndexByCoordinates(q, r + 1));\r\n        }\r\n         //Bottom Left\r\n         if(findIndexByCoordinates(q - 1, r + 1) >= 0){\r\n            adjacentTiles.push(findIndexByCoordinates(q - 1, r + 1));\r\n        }\r\n         //Top Left\r\n         if(findIndexByCoordinates(q - 1, r) >= 0){\r\n            adjacentTiles.push(findIndexByCoordinates(q - 1, r));\r\n        }\r\n\r\n        //These should never be negative so they'll always be pushed. JUST KIDDING. Need the if statement because if you click the bottom tiles, they get out of map and therefore the i becomes negative apparently.\r\n        // adjacentTiles.push(findIndexByCoordinates(q + 1, r));\r\n        // adjacentTiles.push(findIndexByCoordinates(q, r + 1));\r\n        \r\n        \r\n\r\n        console.log(\"Clicked Tile Index:\", i);\r\n        console.log(\"Adjacent Tile Indexes:\", adjacentTiles);\r\n    }\r\n\r\n    // Your click event logic goes here\r\n    // alert(i);\r\n    // console.log(i);\r\n}\r\n\r\nexport {HandleClick};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAGnC,MAAMC,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;EAE7B,MAAMC,sBAAsB,GAAGA,CAACH,CAAC,EAAEC,CAAC,KAAK;IACrC,OAAOG,SAAS,CAACC,SAAS,CAACC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKN,CAAC,IAAIM,KAAK,CAAC,CAAC,CAAC,KAAKL,CAAC,CAAC;EACzE,CAAC;EAGD,IAAIC,CAAC,KAAK,CAAC,CAAC,EAAE;IACV,MAAMK,aAAa,GAAG,EAAE;;IAExB;IACA,IAAGJ,sBAAsB,CAACH,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC;MACrCM,aAAa,CAACC,IAAI,CAACL,sBAAsB,CAACH,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;IACxD;IACA;IACA,IAAGE,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC;MACzCM,aAAa,CAACC,IAAI,CAACL,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D;IACA;IACA,IAAGE,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,IAAI,CAAC,EAAC;MACrCM,aAAa,CAACC,IAAI,CAACL,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,CAAC;IACxD;IACC;IACA,IAAGE,sBAAsB,CAACH,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC;MACtCM,aAAa,CAACC,IAAI,CAACL,sBAAsB,CAACH,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;IACxD;IACC;IACA,IAAGE,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC;MAC1CM,aAAa,CAACC,IAAI,CAACL,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D;IACC;IACA,IAAGE,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,IAAI,CAAC,EAAC;MACtCM,aAAa,CAACC,IAAI,CAACL,sBAAsB,CAACH,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,CAAC;IACxD;;IAEA;IACA;IACA;;IAIAQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,CAAC,CAAC;IACrCO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,aAAa,CAAC;EACxD;;EAEA;EACA;EACA;AACJ,CAAC;AAAAI,EAAA,GAhDKZ,WAAW;AAkDjB,SAAQA,WAAW;AAAE,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}