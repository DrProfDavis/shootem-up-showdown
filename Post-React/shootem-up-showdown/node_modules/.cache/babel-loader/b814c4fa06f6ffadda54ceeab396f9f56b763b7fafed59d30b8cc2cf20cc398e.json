{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joey\\\\class\\\\bootcamp\\\\assignment\\\\shootem-up-showdown\\\\Post-React\\\\shootem-up-showdown\\\\src\\\\components\\\\Player.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  i\n}) => {\n  const gridArray = [\n    // Your gridArray here\n  ];\n  if (i >= 0 && i < gridArray.length) {\n    const [q, r] = gridArray[i];\n    const playerStyle = {\n      position: 'absolute',\n      width: '20px',\n      height: '20px',\n      backgroundColor: 'red',\n      borderRadius: '50%',\n      transform: 'translate(-50%, -50%)'\n      // Use the q and r coordinates to position the player\n      // top: /* calculate the top position based on q */\n      // left: /* calculate the left position based on r */\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: playerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else {\n    // Handle the case where i is out of bounds\n    return null;\n  }\n};\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Player","i","gridArray","length","q","r","playerStyle","position","width","height","backgroundColor","borderRadius","transform","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Joey/class/bootcamp/assignment/shootem-up-showdown/Post-React/shootem-up-showdown/src/components/Player.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Player = ({ i }) => {\r\n  const gridArray = [\r\n    // Your gridArray here\r\n  ];\r\n\r\n  if (i >= 0 && i < gridArray.length) {\r\n    const [q, r] = gridArray[i];\r\n    const playerStyle = {\r\n      position: 'absolute',\r\n      width: '20px',\r\n      height: '20px',\r\n      backgroundColor: 'red',\r\n      borderRadius: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      // Use the q and r coordinates to position the player\r\n      // top: /* calculate the top position based on q */\r\n      // left: /* calculate the left position based on r */\r\n    };\r\n\r\n    return (\r\n      <div style={playerStyle}></div>\r\n    );\r\n  } else {\r\n    // Handle the case where i is out of bounds\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Player;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAE,CAAC,KAAK;EACxB,MAAMC,SAAS,GAAG;IAChB;EAAA,CACD;EAED,IAAID,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAE;IAClC,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGH,SAAS,CAACD,CAAC,CAAC;IAC3B,MAAMK,WAAW,GAAG;MAClBC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE;MACX;MACA;MACA;IACF,CAAC;;IAED,oBACEb,OAAA;MAAKc,KAAK,EAAEP;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAEnC,CAAC,MAAM;IACL;IACA,OAAO,IAAI;EACb;AACF,CAAC;AAACC,EAAA,GA1BIlB,MAAM;AA4BZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}