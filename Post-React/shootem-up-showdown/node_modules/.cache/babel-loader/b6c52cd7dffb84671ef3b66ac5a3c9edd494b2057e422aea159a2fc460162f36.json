{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joey\\\\class\\\\bootcamp\\\\assignment\\\\shootem-up-showdown\\\\Post-React\\\\shootem-up-showdown\\\\src\\\\components\\\\Cell.js\";\nimport React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid';\nimport Player from './Player'; // Import the Player component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handleClick = i => {\n  // Your click event logic goes here\n  alert(i);\n  console.log(i);\n};\n\n// const places = [\n//     {q:0, r: -8},\n//     {q:1, r: -7},\n//     {q:2, r: -6},\n//     {q:18, r: -7},\n//     {q:17, r: -8},\n//     {q:35, r: -7},\n//     {q:19, r: -6}\n// ]\n\nconst getRandomPlace = () => {\n  const randomIndex = Math.floor(Math.random() * places.length);\n  return places[randomIndex];\n};\nconst Cell = ({\n  q,\n  r,\n  i\n}) => {\n  // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n  const isPlayerCell = places.some(place => place.q === q && place.r === r);\n  return /*#__PURE__*/_jsxDEV(Hexagon, {\n    onClick: () => handleClick(i),\n    q: q,\n    r: r,\n    children: isPlayerCell ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this) : null\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","Hexagon","Text","Player","jsxDEV","_jsxDEV","handleClick","i","alert","console","log","getRandomPlace","randomIndex","Math","floor","random","places","length","Cell","q","r","isPlayerCell","some","place","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Joey/class/bootcamp/assignment/shootem-up-showdown/Post-React/shootem-up-showdown/src/components/Cell.js"],"sourcesContent":["import React from 'react';\nimport { Hexagon, Text } from 'react-hexgrid'\nimport Player from './Player' // Import the Player component\n\n\nlet handleClick = (i) => {\n    // Your click event logic goes here\n    alert(i);\n    console.log(i)\n}\n\n// const places = [\n//     {q:0, r: -8},\n//     {q:1, r: -7},\n//     {q:2, r: -6},\n//     {q:18, r: -7},\n//     {q:17, r: -8},\n//     {q:35, r: -7},\n//     {q:19, r: -6}\n// ]\n\nconst getRandomPlace = () => {\n    const randomIndex = Math.floor(Math.random() * places.length);\n    return places[randomIndex];\n};\n\nconst Cell = ({ q, r, i }) => {\n\n    // const isPlayerCell = q === 5 && r === -1; // Change these coordinates as needed\n\n    const isPlayerCell = places.some(place => place.q === q && place.r === r);\n\n    return (\n        <Hexagon onClick={()=>handleClick(i)} key={i} q={q} r={r}>\n            {/* {<Text>\n                {i} {q} {r}\n            </Text>} */}\n            {isPlayerCell ? <Player /> : null}\n        </Hexagon>\n    )\n}\nexport default Cell"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,IAAI,QAAQ,eAAe;AAC7C,OAAOC,MAAM,MAAM,UAAU,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9B,IAAIC,WAAW,GAAIC,CAAC,IAAK;EACrB;EACAC,KAAK,CAACD,CAAC,CAAC;EACRE,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC7D,OAAOD,MAAM,CAACJ,WAAW,CAAC;AAC9B,CAAC;AAED,MAAMM,IAAI,GAAGA,CAAC;EAAEC,CAAC;EAAEC,CAAC;EAAEb;AAAE,CAAC,KAAK;EAE1B;;EAEA,MAAMc,YAAY,GAAGL,MAAM,CAACM,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACJ,CAAC,KAAKA,CAAC,IAAII,KAAK,CAACH,CAAC,KAAKA,CAAC,CAAC;EAEzE,oBACIf,OAAA,CAACJ,OAAO;IAACuB,OAAO,EAAEA,CAAA,KAAIlB,WAAW,CAACC,CAAC,CAAE;IAASY,CAAC,EAAEA,CAAE;IAACC,CAAC,EAAEA,CAAE;IAAAK,QAAA,EAIpDJ,YAAY,gBAAGhB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG;EAAI,GAJMtB,CAAC;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKnC,CAAC;AAElB,CAAC;AAAAC,EAAA,GAdKZ,IAAI;AAeV,eAAeA,IAAI;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}